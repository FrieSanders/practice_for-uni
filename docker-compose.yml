services:
  postgres:
    image: postgres:16-alpine
    container_name: practice-postgres
    environment:
      POSTGRES_DB: practice
      POSTGRES_USER: practice
      POSTGRES_PASSWORD: practice
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U practice -d practice"]
      interval: 5s
      timeout: 3s
      retries: 30
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: practice-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: practice
      RABBITMQ_DEFAULT_PASS: practice
    ports: ["5672:5672","15672:15672"]
    healthcheck:
      test: ["CMD-SHELL","rabbitmq-diagnostics -q ping"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s

  auth-service:
    build: ./auth-service
    ports: ["8081:8081"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/practice
      SPRING_DATASOURCE_USERNAME: practice
      SPRING_DATASOURCE_PASSWORD: practice
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: practice
      SPRING_RABBITMQ_PASSWORD: practice
    depends_on:
      postgres: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:8081/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 3s
      retries: 30
      start_period: 20s

  catalog-service:
    build: ./catalog-service
    ports: ["8082:8082"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/practice
      SPRING_DATASOURCE_USERNAME: practice
      SPRING_DATASOURCE_PASSWORD: practice
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: practice
      SPRING_RABBITMQ_PASSWORD: practice
    depends_on:
      postgres: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:8082/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 3s
      retries: 30
      start_period: 20s

  inventory-service:
    build: ./inventory-service
    ports: ["8083:8083"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/practice
      SPRING_DATASOURCE_USERNAME: practice
      SPRING_DATASOURCE_PASSWORD: practice
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: practice
      SPRING_RABBITMQ_PASSWORD: practice
    depends_on:
      postgres: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:8083/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 3s
      retries: 30
      start_period: 20s

  notification-service:
    build: ./notification-service
    ports: ["8084:8084"]
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: practice
      SPRING_RABBITMQ_PASSWORD: practice
    depends_on:
      rabbitmq: { condition: service_healthy }
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:8084/actuator/health || wget -qO- http://localhost:8084/health | grep -q 'OK\\|\"status\":\"UP\"'"]
      interval: 10s
      timeout: 3s
      retries: 30
      start_period: 20s

  order-service:
    build: ./order-service
    ports:
      - "8085:8085"
    environment:
      - FIREBASE_CREDENTIALS=/secrets/firebase.json
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/practice
      - SPRING_DATASOURCE_USERNAME=practice
      - SPRING_DATASOURCE_PASSWORD=practice
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=practice
      - SPRING_RABBITMQ_PASSWORD=practice
      - INVENTORY_URL=http://inventory-service:8083
      - PAYMENT_URL=http://payment-mock:8086
      - NOTIFY_URL=http://notification-service:8084
      - CATALOG_URL=http://catalog-service:8082
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      postgres: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:8085/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 3s
      retries: 30
      start_period: 20s
    volumes:
      - ./secrets/firebase.json:/secrets/firebase.json:ro

  payment-mock:
    build: ./payment-mock
    ports: ["8086:8086"]
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:8086/actuator/health || wget -qO- http://localhost:8086/health | grep -q 'OK\\|\"status\":\"UP\"'"]
      interval: 10s
      timeout: 3s
      retries: 30
      start_period: 10s
  ui:
    build: ./ui
    container_name: eltech-ui
    ports:
      - "8080:80"
    depends_on:
      - order-service
      - catalog-service
      - inventory-service
      - notification-service
volumes:
  pgdata: